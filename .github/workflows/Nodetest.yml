# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: all-stack CI

on:
  push:
    branches: [ "master" ]
env:
  IMAGE_NAME: all-stack

jobs:
  test:
     runs-on: ubuntu-latest
     outputs:
        get-github-job: ${{github.job}}
        get-job-id-test: ${{steps.job-id.outputs.get-job-id}}

     strategy:
         fail-fast: true

     steps:
     - name: Get Current ID Job 
       uses: Tiryoh/gha-jobid-action@v0
       id: get-job-id
       with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        job_name: test
        per_page: 30
     - id: job-id
       run: echo "::set-output name=get-job-id::${{steps.get-job-id.outputs.job_id}}"
     - uses: actions/checkout@v1
     - run: ls -la
     - name: Use Node.js
       uses: actions/setup-node@v1
       with:
        node-version: '18.6'
        cache: 'npm'
     - name: Test angular
       working-directory: ./angular
       run: |
        npm install
        ls -la
        npm test -- --watch=false --browsers=ChromeHeadless
     - name: Test react
       working-directory: ./react
       run: |
        npm install
        ls -la
        ls -la src
        npm test -- --watch=false --browsers=ChromeHeadless
  
  build_push:
    needs: [test]
    runs-on: ubuntu-latest
    outputs:
        get-github-job: ${{github.job}}
        get-job-id-build: ${{steps.job-id.outputs.get-job-id}}

    strategy:
      fail-fast: true
    steps:
    - name: Get Current ID Job 
      uses: Tiryoh/gha-jobid-action@v0
      id: get-job-id
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        job_name: build_push
        per_page: 30
    - id: job-id
      run: echo "::set-output name=get-job-id::${{steps.get-job-id.outputs.job_id}}"
    - uses: actions/checkout@v1
    - name: Use Node.js 
      uses: actions/setup-node@v1
      with:
        node-version: '18.6'
        cache: 'npm'
    - name: Build angular
      run:  npm run build --if-present
      working-directory: angular
    - name: Check files after build
      run: ls -la angular/dist/angular-starter
    - name: Build react
      run: npm run build --if-present
      working-directory: react
    - name: Check files after build
      run: ls -la react/build
    - name: Login to GitHub Container Registry
      run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
    - name: Build a container image from our angular and react app using Docker
      run: docker build -t $IMAGE_NAME .
    - name: Tag & publish to GitHub Container Registry
      run: |
           IMAGE_ID=ghcr.io/${{ github.repository_owner }}/$IMAGE_NAME
           VERSION=latest
           docker tag $IMAGE_NAME $IMAGE_ID:$VERSION
           docker push $IMAGE_ID:$VERSION
           
  notification:
    needs: [test, build_push]
    if: ${{ always() }}

    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
    steps:
    - name: get Time started test job
      run: |
       gh api \
       -H "Accept: application/vnd.github+json" \
       /repos/frayme/angular-react-starter/check-runs/${{needs.test.outputs.get-job-id-test}} --jq '.started_at' > start_test.txt
       echo " started_time_test= $(cat start_test.txt)" >> $GITHUB_ENV
    - name: get Time finish test job
      run: |
       gh api \
       -H "Accept: application/vnd.github+json" \
       /repos/frayme/angular-react-starter/check-runs/${{needs.test.outputs.get-job-id-test}} --jq '.completed_at' > finish_test.txt
       echo " finished_time_test= $(cat finish_test.txt)" >> $GITHUB_ENV
     #
    - name: get Time started build job
      run: |
       gh api \
       -H "Accept: application/vnd.github+json" \
       /repos/frayme/angular-react-starter/check-runs/${{needs.build_push.outputs.get-job-id-build}} --jq '.started_at' > start_build.txt
       echo " started_time_build= $(cat start_build.txt)" >> $GITHUB_ENV
    - name: get Time finish build job
      run: |
       gh api \
       -H "Accept: application/vnd.github+json" \
       /repos/frayme/angular-react-starter/check-runs/${{needs.build_push.outputs.get-job-id-build}} --jq '.completed_at' > finish_build.txt
       echo " finish_time_build= $(cat finish_build.txt)" >> $GITHUB_ENV
     #
    - name: Send mail
      if: always()
      uses: dawidd6/action-send-mail@v3
      with:
        server_address: smtp.gmail.com
        server_port: 465
        username: ${{secrets.MAIL_USERNAME}}
    # App password for from google acc.
        password: ${{secrets.MAIL_PASSWORD}}
    # email subject
        subject: ${{ github.job }} job of ${{ github.repository }} has ${{ job.status }}
    # email body as text
        body: ${{ needs.test.outputs.get-github-job }} job in worflow ${{ github.workflow }} of ${{ github.repository }} has result ${{ needs.test.result }}. ${{ needs.test.outputs.get-github-job }} started at ${{ env.started_time_test }} and finished at ${{ env.finished_time_test }} "\n"
         ${{ needs.build_push.outputs.get-github-job }} job in worflow ${{ github.workflow }} of ${{ github.repository }} has result ${{ needs.build_push.result }}. ${{ needs.build_push.outputs.get-github-job }} started at ${{ env.started_time_build }} and finished at ${{ env.finished_time_build }} "\n"
    #  send email to
        to: prutkov.work@gmail.com
    # from email name
        from: ${{ github.repository_owner }}

