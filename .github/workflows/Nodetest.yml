# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: all-stack CI
on:
  push:
    branches: [ "test" ]
env: 
  GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  IMAGE_NAME: all-stack

jobs:
  build:
   runs-on: ubuntu-latest
   outputs:
    get-job-id-1: ${{steps.job-id.outputs.get-job-id}}
    run-id-job-1: ${{steps.run-id.outputs.run-id-job}}
   steps:
    - uses: actions/checkout@v1
    - id: run-id
      run: echo "::set-output name=run-id-job::${{github.run_id}}"
    - name: Check files!
      run: ls -la
    - name: Echo GitHub context
      env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
      run: | 
        echo $GITHUB_CONTEXT \
         && echo ${{github.api_url}} \
        && echo ${{github.action}}
    - name: Get Current ID Job 
      uses: Tiryoh/gha-jobid-action@v0
      id: get-job-id
      with:
       github_token: ${{ secrets.GITHUB_TOKEN }}
       job_name: build
       per_page: 30
    - id: job-id
      run: echo "::set-output name=get-job-id::${{steps.get-job-id.outputs.job_id}}"
    - name: Get time
      run: curl https://api.github.com/repos/frayme/angular-react-starter/check-runs/${{ steps.get-job-id.outputs.job_id }}
     # run: |
     #  gh api \
     #  -H "Accept: application/vnd.github+json" \
     #  /repos/frayme/angular-react-starter/actions/runs/check-runs/${{ steps.jobs.outputs.job_id }} > 1.json \
     #  && cat 1.json
    - run: echo ${{ github.event.repository.updated_at}} | sed 's/:/./g'
    - name: Get Time
      id: time-job-exe
      uses: nanzm/get-time-action@v1.1
      with:
          timeZone: 5
          format: 'YYYY-MM-DD-HH-mm-ss'
    - name: Usage
      env:
          TIME: "${{ steps.time-job-exe.outputs.time }}"
      run: |
          echo $TIME
    - run: exit 1



  notification:
   runs-on: ubuntu-latest
   needs: build
   if: ${{ always() }}
   steps:
    - run: date
    - uses: actions/checkout@v1
    - run: | 
        echo "result build: ${{ needs.build.result }}"
    - name: Check files!
      run: ls -la
    - run: echo ${{needs.build.outputs.get-job-id-1}}
    - name: Echo GitHub context
      env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
      run: echo $GITHUB_CONTEXT
    - name: get Time started
    #  run: |
    #   TIME_EXE=$(curl https://api.github.com/repos/${{ github.repository }}/actions/runs/${{github.run_id}}/jobs
   # - name: json
   #   env:
   #       TIME_JS: ${{toJson($TIME_EXE)}}
   #   run: echo $TIME_JS
      run: |
       gh api \
       -H "Accept: application/vnd.github+json" \
       /repos/frayme/angular-react-starter/check-runs/${{needs.build.outputs.get-job-id-1}} --jq '.started_at' > start.txt
      # /repos/frayme/angular-react-starter/actions/runs/check-runs/${{needs.build.outputs.get-job-id-1}} > 1.json \
    - name: get Time end
      run: |
       gh api \
       -H "Accept: application/vnd.github+json" \
       /repos/frayme/angular-react-starter/check-runs/${{needs.build.outputs.get-job-id-1}} --jq '.completed_at' > end.txt
    - run: cat end.txt
    - name: Check files!
      run: cat start.txt #| sed 's/:/./g' > result1.txt
       
#    - name: Send mail
#      if: always()
#     uses: dawidd6/action-send-mail@v3
 #     with:
#        server_address: smtp.gmail.com
  #      server_port: 465
  #      username: ${{secrets.MAIL_USERNAME}}
    # App password for from google acc.
  #      password: ${{secrets.MAIL_PASSWORD}}
    # email subject
   #     subject: ${{ github.job }} job of ${{ github.repository }} has ${{ job.status }}
    # email body as text
  #      body: Build job in worflow ${{ github.workflow }} of ${{ github.repository }} has ${{ job.status }}
    #  send email to
   #     to: prutkov.work@gmail.com
    # from email name
    #    from: ${{ github.repository_owner }}
   
