name: Angular CI

on:
  push:
    branches: [ "test" ]
env:
  IMAGE_NAME: angular
  
jobs:
  test:
     runs-on: ubuntu-latest
     strategy:
         fail-fast: true
     steps:
     - name: clone repo
       uses: actions/checkout@v1
     - name: setup node
       uses: actions/setup-node@v1
       with:
        node-version:  '18.6'
     - name: test angular
       run: |
        npm install
        npm run test -- --watch=false --browsers=ChromeHeadless
       working-directory: angular
  
  build:
    needs: [test]
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
    steps:
    - name: clone repo
      uses: actions/checkout@v1
    - name: setup node
      uses: actions/setup-node@v1
      with:
        node-version: '18.6'
    - name: build angular
      run: |
        npm install
        npm run build --if-present
      working-directory: angular    
    - name: cache files
      uses: actions/cache@v3
      id: cache-files
      with:
        path: |
          ./angular
          ./nginx.conf
          ./Dockerfile
  push:
    needs: [test,build]
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
    steps:
    - name: login github registry
      run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
#    - if: ${{ steps.cache-files.outputs.cache-hit != 'true' }}
    - name: build image
      run: docker build -t $IMAGE_NAME:${GITHUB_SHA::7} .
    - name: tag and push docker image
      run: |
           IMAGE_ID=ghcr.io/${{ github.repository_owner }}/$IMAGE_NAME
           VERSION=${GITHUB_SHA::7}
           docker tag $IMAGE_NAME:${GITHUB_SHA::7} $IMAGE_ID:$VERSION
           docker push $IMAGE_ID:$VERSION
