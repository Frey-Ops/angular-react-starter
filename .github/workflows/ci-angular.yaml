name: Angular CI

on:
  push:
    branches: [ "test" ]
env:
  IMAGE_NAME: angular
  GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  
jobs:
  testing:
     runs-on: ubuntu-latest
     outputs:
        get-job-id-test: ${{steps.job-id-test.outputs.get-job-id-test-out}}
        short-sha1: ${{steps.env-short-sha.outputs.short-sha}}
     strategy:
         fail-fast: true
     steps:
     - name: Take Short SHA
       id: env-short-sha
       run: echo "::set-output name=short-sha::${GITHUB_SHA::7}"
     - uses: actions/checkout@v1
     - name: Use Node.js
       uses: actions/setup-node@v1
       with:
        node-version:  '18.6'
     - name: Test angular
       run: |
        npm install
        npm run test -- --watch=false --browsers=ChromeHeadless
       working-directory: angular
     - name: Get Current ID Job 
       uses: Tiryoh/gha-jobid-action@v0
       id: get-job-id-test
       with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          job_name: ${{github.job}}
          per_page: 30
     - name: Set job_id testing
       id: job-id-test
       run: echo "::set-output name=get-job-id-test-out::${{steps.get-job-id-test.outputs.job_id}}"
  
  build_push:
    needs: [testing]
    runs-on: ubuntu-latest
    outputs:
        get-job-id-build: ${{steps.job-id-build.outputs.get-job-id-build}}
    strategy:
      fail-fast: true
    steps:
    - run: echo $GITHUB_CONTEXT
    - name: Get Current ID Job 
      uses: Tiryoh/gha-jobid-action@v0
      id: get-job-id-build
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        job_name: build_push
        per_page: 30
    - name: Set job_id build
      id: job-id-build
      run: echo "::set-output name=get-job-id-build::${{steps.get-job-id-build.outputs.job_id}}"
    - uses: actions/checkout@v1
    - name: Use Node.js 
      uses: actions/setup-node@v1
      with:
        node-version: '18.6'
    - name: Build angular
      run: |
        npm install
        npm run build --if-present
      working-directory: angular
    - name: Login to GitHub Container Registry
      run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
    - name: Build a container image from our angular app using Docker
      run: docker build -t $IMAGE_NAME:${GITHUB_SHA::7} .
    - name: Tag & publish to GitHub Container Registry
      run: |
           IMAGE_ID=ghcr.io/${{ github.repository_owner }}/$IMAGE_NAME
           VERSION=${GITHUB_SHA::7}
           docker tag $IMAGE_NAME:${GITHUB_SHA::7} $IMAGE_ID:$VERSION
           docker push $IMAGE_ID:$VERSION
           
  notification:
    needs: [testing, build_push]
    if: ${{ always() }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
    steps:
    - name: get Time started testing job
      run: |
       gh api \
       -H "Accept: application/vnd.github+json" \
       /repos/frayme/angular-react-starter/check-runs/${{needs.testing.outputs.get-job-id-test}} --jq '.started_at' > start_test.txt
       echo "started_time_test=$(cat start_test.txt)" >> $GITHUB_ENV
    - name: get Time finish testing job
      run: |
       gh api \
       -H "Accept: application/vnd.github+json" \
       /repos/frayme/angular-react-starter/check-runs/${{needs.testing.outputs.get-job-id-test}} --jq '.completed_at' > finish_test.txt
       echo "finished_time_test=$(cat finish_test.txt)" >> $GITHUB_ENV
    - name: get Time started build job
      run: |
       gh api \
       -H "Accept: application/vnd.github+json" \
       /repos/frayme/angular-react-starter/check-runs/${{needs.build_push.outputs.get-job-id-build}} --jq '.started_at' > start_build.txt
       echo "started_time_build=$(cat start_build.txt)" >> $GITHUB_ENV
    - name: get Time finish build job
      run: |
       gh api \
       -H "Accept: application/vnd.github+json" \
       /repos/frayme/angular-react-starter/check-runs/${{needs.build_push.outputs.get-job-id-build}} --jq '.completed_at' > finish_build.txt
       echo "finished_time_build=$(cat finish_build.txt)" >> $GITHUB_ENV
    - name: Send mail if Failure
      if: ${{ failure() }}
      uses: dawidd6/action-send-mail@v3
      with:
        server_address: smtp.gmail.com
        server_port: 465
        username: ${{secrets.MAIL_USERNAME}}
        password: ${{secrets.MAIL_PASSWORD}}
        subject: ${{ github.job }} job of ${{ github.repository }} has ${{ job.status }}
        body: Testing job in workflow ${{ github.workflow }} of ${{ github.repository }} has result ${{ needs.testing.result }}.
         Build and Push job in workflow ${{ github.workflow }} of ${{ github.repository }} has result ${{ needs.build_push.result }}.
        to: prutkov.work@gmail.com
        from: ${{ github.repository_owner }}
        
    - name: Send mail if success
      uses: dawidd6/action-send-mail@v3
      with:
        server_address: smtp.gmail.com
        server_port: 465
        username: ${{secrets.MAIL_USERNAME}}
        password: ${{secrets.MAIL_PASSWORD}}
        subject: ${{ github.job }} job of ${{ github.repository }} has ${{ job.status }}
        body: Testing job in workflow ${{ github.workflow }} of ${{ github.repository }} has result ${{ needs.testing.result }}. ${{ needs.testing.outputs.get-github-job }} started at ${{ env.started_time_test }} and finished at ${{ env.finished_time_test }}.
         Build and Push job in workflow ${{ github.workflow }} of ${{ github.repository }} has result ${{ needs.build_push.result }}. ${{ needs.build_push.outputs.get-github-job }} started at ${{ env.started_time_build }} and finished at ${{ env.finished_time_build }}.
         The package available at the link ghcr.io/frayme/${{env.IMAGE_NAME}}:${{ needs.testing.outputs.short-sha1 }}. Please check docker-compose file for local deploy and change url address if that need.
        to: prutkov.work@gmail.com
        from: ${{ github.repository_owner }}
        
